%%%%%%%%%%%%   LaTeX Preamble %%%%%%%%%%%%%%

\documentclass{beamer}

% list all packages
\usefonttheme[onlymath]{serif}
\usepackage{amsmath}
\usepackage{comment}
\usepackage{hyperref}
\usepackage{pgfpages}
\usepackage{amsmath}
\usepackage{latexsym}
\usepackage{color}
\usepackage{ifthen}
\usepackage{animate}
\usepackage{tikz,pgfplots}
\usepackage{mycommands}
\pgfplotsset{compat=1.3}
\usetikzlibrary{plotmarks,shapes,arrows,positioning,snakes}
\usepackage[latin1]{inputenc}
\usepackage{xcolor}
\usepackage{tikz}
\usetikzlibrary{decorations.pathmorphing,shapes.multipart}
\usepackage{graphicx}
\usepackage{scalefnt}
\usepackage{relsize}
\usepackage{algorithm}
\usepackage{algorithmic}

% slide theme
\usetheme{Berlin}
\usecolortheme{mit}

% Set Logo
\pgfdeclareimage[height=0.5cm]{mit-logo}{mit-logo.pdf}
\logo{\vspace{-0.25cm}\pgfuseimage{mit-logo}\hspace*{0.025cm}}

% Show outline at beginning of each section
%\AtBeginSection[]
%{
%  \begin{frame}<beamer>
%    \frametitle{Outline}
%    \tableofcontents[currentsection]
%  \end{frame}
%}

% Include Custom environments
\input{environments.tex}

% Title Page
\title[JFNK Methods for Coupled Nonlinear Systems]{Jacobian-Free Newton-
Krylov (JFNK) Methods for Nonlinear Neutronics/Thermal-Hydraulic Equations}
\author[]{Bryan Herman}
\institute[\insertpagenumber]{}
\date{\today} 

% -----------------------------------------------------------------------------
\begin{document}
% -----------------------------------------------------------------------------

% Inset title page
\frame{\titlepage}

% Outline slide
\begin{frame}{Outline}
  \tableofcontents{}
\end{frame}

%==============================================================================
\begin{section}{Introduction}

%------------------------------------------------------------------------------
\begin{frame}{Motivation}

  \begin{customlist}{2ex}{0pt}

    \item Eventually will be part of thesis work
    \vfill\item JFNK method not currently used in nuclear reactor 
		analysis
    \vfill\item Incorporates a lot of ideas from 2.29 class
    \vfill\item Coupled physics is fun!

  \end{customlist}

\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Nuclear Reactor Plant}
  \scalebox{0.5}{\input{./tikz/reactor.tikz}}
  \vfill
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Nuclear Feedback}
  \begin{center}
    \scalebox{0.4}{\input{./tikz/nucleus.tikz}}
    \begin{itemize}
      \begin{footnotesize}
	\item Fuel Temperature Feedback -  $T_{f} \uparrow$, U-238 
	      Capture $\uparrow$, Fission Rate $\downarrow$, 
	      Power $\downarrow$
	\item Coolant Density Feedback - $\rho \downarrow$,
	      $E_{n} \uparrow$, Fission Rate $\downarrow$, 
	      Power $\downarrow$
      \end{footnotesize}
    \end{itemize}
  \end{center}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Common Approach to Coupling: Operator Splitting}
\begin{customlist}{2ex}{0pt}
  \item Solve physics independently and iterate between them
  \begin{center}
    \scalebox{0.6}{\input{./tikz/PARCS_marching.tikz}}
  \end{center}
  \item Fully coupled approach solves the nonlinear physics together
  \begin{center}
    \scalebox{0.6}{\input{./tikz/Fully_coupled.tikz}}
  \end{center}
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{1-D Slab Reactor Geometry}
\begin{columns}
  \begin{column}{0.5\textwidth}
  \begin{center}
    \scalebox{0.5}{\input{./tikz/Fuel_pin.tikz}}
    \\ Top-view
    \\ Fuel Rod Unit-Cell
  \end{center}
  \end{column}
  \begin{column}{0.5\textwidth}
  \begin{center}
    \scalebox{0.45}{\input{./tikz/Geometry.tikz}}
      \\ Side-view (vertical)
      \\ 1-D Model of Reactor
  \end{center}
  \end{column}
\end{columns}
\end{frame}
%------------------------------------------------------------------------------
\end{section}
%==============================================================================
\begin{section}{Governing Equations}
%------------------------------------------------------------------------------
\begin{frame}{Neutronics}
\relsize{-1}
\begin{customlist}{2ex}{0pt}

    \item Basic Neutron Conservation:
    \[
      \nonumber Change + Leakage + Interactions = Scattering + Fission
    \]

    \item Neutron Transport Equation:
    \[
      \nonumber {\underbrace{\frac{1}{v}\frac{\partial\varphi}{\partial t}}_{\mathrm{time-dependent}}} + {\underbrace{\mathbf{\Omega}\cdot\nabla\varphi\left(\mathbf{r},E,\mathbf{\Omega},t\right)}_{\mathrm{neutron\, leakage}}}+\underbrace{\Sigma_{t}\left(\mathbf{r},E,t\right)\varphi\left(\mathbf{r},E,\mathbf{\Omega},t\right)}_{\mathrm{interation\, of\, neutrons\, with\, medium}}=\underbrace{Q\left(\mathbf{r},E,\mathbf{\Omega},t\right)}_{\mathrm{neutron\, source}}
    \]

    \item Neutron Diffusion Equation (1-D Energy Integrated)
    \[
     \nonumber\frac{1}{v}\frac{\partial\phi}{\partial t}-D\left(x,t\right)\frac{\partial^{2} \phi}{\partial^{2} x}+\Sigma_{a}\left(x,t\right)\phi\left(x,t\right)=\frac{1-\beta}{k_{eff}}\nu\Sigma_{f}\left(x,t\right)\phi\left(x,t\right)+\lambda_{d}c\left(x,t\right)
    \]
    \[
    \nonumber\frac{\partial c}{\partial t}=\frac{\beta}{k_{eff}}\nu\Sigma_{f}\left(x,t\right)\phi\left(x,t\right)-\lambda_{d}c\left(x,t\right)   
    \]

\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Discretization of Neutronics Equations}
\relsize{-2}
\begin{block}{Assumptions:}
\begin{enumerate}
  \item One-dimensional finite volume spatial discretization
  \item Central difference scheme for diffusion term
  \item No-incoming current of neutrons at boundaries
  \item Implicit Euler time discretization
\end{enumerate}
\end{block}
\begin{customlist}{2ex}{0pt}
  \item Discretized neutronics equation for interior cell
  \begin{multline}
    \nonumber
    \frac{1}{v}\frac{d\bar{\phi}_{i}}{dt}+-\frac{2}{\Delta x^{2}}\frac{D_{i}D_{i-1}}{D_{i}+D_{i-1}}\bar{\phi}_{i-1}+\left(\frac{2}{\Delta x^{2}}\frac{D_{i+1}D_{i}}{D_{i+1}+D_{i}}+\frac{2}{\Delta x^{2}}\frac{D_{i}D_{i-1}}{D_{i}+D_{i-1}}+\Sigma_{a,i}\right)\bar{\phi}_{i}-\\
    \frac{2}{\Delta x^{2}}\frac{D_{i+1}D_{i}}{D_{i+1}+D_{i}}\bar{\phi}_{i+1}=\frac{1-\beta}{k_{eff}}\nu\Sigma_{f,i}\bar{\phi}_{i}+\lambda_{d}\bar{c}_{i}
  \end{multline}
  \item Matrix-form of neutronics equations
  \[
    \bar{\mathbf{\Phi}}^{n+1}-\bar{\mathbf{\Phi}}^{n}+v\Delta t\left(\mathbb{M}\bar{\mathbf{\Phi}}^{n+1}-\left(1-\beta\right)\lambda\mathbb{F}\bar{\mathbf{\Phi}}^{n+1}-\lambda_{d}\mathbf{\bar{c}}^{n+1}\right)=0
  \]
  \item Matrix-form of precursors
  \[
    \mathbf{\bar{c}}^{n+1}-\mathbf{\bar{c}}^{n}+\Delta t\left(\lambda_{d}\mathbf{\bar{c}}^{n+1}-\beta\lambda\mathbb{F}\bar{\mathbf{\Phi}}^{n+1}\right)=0
  \]
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Thermal Hydraulics}
\relsize{-1}
\begin{customlist}{2ex}{0pt}
  \item Energy Equation - single phase fluid and inviscid fluid
  \[
   \frac{\partial\left(\rho h\right)}{\partial t}+\nabla\cdot\left(\rho h\mathbf{u}\right)=-\nabla\cdot\mathbf{q}^{\prime\prime}+q^{\prime\prime\prime}
  \]
  \vfill\item Assuming fissions are a volumetic heat source in 1-D
  \[
   \rho A\frac{\partial h}{\partial t}+\dot{m}\frac{\partial h}{\partial x}=q^{\prime}
  \]
  \vfill\item For an incompressible fluid, $dh=c_{p}dT$
  \[
   \rho Ac_{p}\frac{\partial T}{\partial t}+\dot{m}c_{p}\frac{\partial T}{\partial x}=q^{\prime}
  \]
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Discretization of Energy Equation}
\relsize{-1}
\begin{block}{Assumptions:}
\begin{enumerate}
  \item One-dimensional finite volume spatial discretization
  \item Upwind difference scheme for flux
  \item Specify inlet conditions and mass flow rate
  \item Implicit Euler time discretization
\end{enumerate}
\end{block}
\begin{customlist}{2ex}{0pt}
  \item spatial discretization
  \[
   \frac{\rho A\Delta x}{w}\frac{d\bar{T}_{i}}{dt}+\bar{T}_{i}-\bar{T}_{i-1}=\frac{1}{2wc_{p}}\left(Q_{i-1}+Q_{i}\right)
  \]
  \item Matrix-form with time discretization
  \[
   \mathbf{\bar{T}}^{n+1}-\mathbf{\bar{T}}^{n}+\frac{w\Delta t}{\mathcal{P}^{n+1}A\Delta x}\left(\mathbb{S}\mathbf{\bar{T}}^{n+1}-\mathbb{R}\mathbf{Q}^{n+1}\right)=0
  \]
  \alert{Note:} $\mathcal{P}$ is a vector of cell-averaged coolant densities
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Physics Coupling}
\relsize{-2}
\begin{block}{Neutronics-Thermal Hydraulics}
  \begin{itemize}
    \item Neutrons cause fissions
    \item Large portion of fission energy deposited in coolant
    \item This is represented by
    \[
      \mathbf{Q}=\tilde{c}\mathbb{E}\bar{\mathbf{\Phi}}\Delta x
    \]
    \\where $\mathbb{E}=\mathrm{diag}\left\{\kappa\Sigma_{f}\right\}$ characterizes energy per fission and \\  $\tilde{c}$ is flux-power normalization constant
  \end{itemize}
\end{block}
\begin{alertblock}{Thermal Hydraulics-Neutronics}
  \begin{itemize}
    \item Diffusion theory parameters depend on coolant density
    \item This dependence is determined with a transport theory code
    \item $D$, $\Sigma_{a}$, $\nu\Sigma_{f}$, $\kappa\Sigma_{f}$ are all affect by coolant density variations
    \item Data is fitted with a linear regression of the form:
    \[
     \mathbf{\Sigma} = \mathbf{\Sigma}^{ref} + \frac{\partial\Sigma}{\partial\rho}\left(\mathcal{P} - \rho^{ref}\right)
    \]
  \end{itemize}
\end{alertblock}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{The Steady-State Eigenvalue Problem}
\begin{customlist}{2ex}{0pt}
  \item The steady state equations must be solved first
  \vfill\item Reducing the neutronics equation to steady-state:
  \[
    \mathbb{M}\bar{\mathbf{\Phi}}=\lambda\mathbb{F}\bar{\mathbf{\Phi}},\qquad \lambda = \frac{1}{k_{eff}}
  \]
  \vfill\item Eigenvalue, $\lambda$, and eigenvector, $\mathbf{\Phi}$, must be determined
  \vfill\item Flux-power normalization constant determined from reactor power
  \[
    Q_{R}=\tilde{c}\int_{0}^{L}dx\kappa\Sigma_{f}\left(x\right)\phi\left(x\right)=\tilde{c}\sum_{i}\kappa\Sigma_{f,i}\bar{\phi}_{i}\Delta x=\tilde{c}\kappa\mathbf{\Sigma}_{f}^{\mathrm{T}}\bar{\mathbf{\Phi}}\Delta x
  \]
  \item $\lambda$ and $\tilde{c}$ are input as constants for time-dependent calculations 
  \vspace{0.5cm}
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\end{section}
%==============================================================================
\begin{section}{Solvers}
%------------------------------------------------------------------------------
\begin{frame}{Newton's Method}
\relsize{-2}
\begin{block}{Procedure:}
\begin{algorithmic}[1]
  \color{blue}
  \STATE Goal:$\mathbf{F}\left(\mathbf{x}\right) = \mathbf{0}$
  \color{black}
  \STATE Guess $\mathbf{x}$
  \FOR{$n=1,2,3,...$}
    \STATE $\mathbf{r} = \mathbf{F}\left(\mathbf{x}\right)$
    \IF{$\left\Vert \mathbf{r} \right\Vert < ntol$} \STATE DONE! \ENDIF
    \STATE $\mathbf{dx} = -\mathbb{J}^{-1}\left(\mathbf{x}\right)\mathbf{F}\left(\mathbf{x}\right)$
    \STATE $\mathbf{x} = \mathbf{x} + \mathbf{dx}$
  \ENDFOR
\end{algorithmic}
\end{block}
Three major tasks:
\begin{enumerate}
  \item Evaluate residual vector in external function
  \item Evalue Jacobian in external function (Do we have to?)
  \item Calculate $\mathbf{dx}$ - Direct or Iterative Solvers?
\end{enumerate}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Krylov Subspace Methods}
\relsize{-1}
\begin{customlist}{2ex}{0pt}
  \item A class of iterative methods for sparse systems
  \item Solves $\mathbb{A}\mathbf{x}=\mathbf{b}$ by projecting a $m$ dimensional problem into a lower dimensional Krylov subspace
  \[
   \mathcal{K}_{n}\left(\mathbb{A},\mathbf{v}\right)=\mathrm{span}\left\{ \mathbf{v},\mathbb{A}\mathbf{v},\mathbb{A}^{2}\mathbf{v},...,\mathbb{A}^{n-1}\mathbf{v}\right\} 
  \]
  \item Here $\mathbb{A}$ is nonhermitian and we use the GMRES method
  \item GMRES uses the Arnoldi method to reduce the system to Hessenberg form
  \[
   \mathbb{A}\mathbb{Q}=\mathbb{Q}\mathbb{H}
  \]
  \[
   \mathbb{H}=\left[\begin{array}{cccc}
    h_{11} &  & \cdots & h_{1n}\\
    h_{21} & h_{22}\\
    & \ddots & \ddots & \vdots\\
    &  & h_{n,n-1} & h_{n,n}
   \end{array}\right].
  \]
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Generalized Minimal RESidual Method}
\relsize{-2}
\begin{customlist}{2ex}{0pt}
  \item Goal: $\mathbf{x}_{*}=\mathbb{A}^{-1}\mathbf{b}$
  \item A step $n$, $\mathbf{x}_{*}$ is approximated by $\mathbf{x}_{n}\in\mathcal{K}_{n}$ that minimizes the norm of the residual $\mathbf{r}_{n} = \mathbf{b} - \mathbb{A}\mathbf{x}_{n}$
  \begin{block}{Procedure:}
  \begin{algorithmic}[1]
    \STATE $q_{1} = b/\left\Vert b \right\Vert$
    \FOR{$n=1,2,3,...$}
      \STATE Perform step $n$ of Arnoldi (Creates Hessenberg matrix)
      \STATE Find $y$ to minimize $\left\Vert \widetilde{\mathbb{H}}_{n}\mathbf{y}-\left\Vert \mathbf{b}\right\Vert \mathbf{e}_{1}\right\Vert$
      \IF{$\left\Vert \mathbf{r} \right\Vert < ltol$} \STATE DONE! \ENDIF
    \ENDFOR
    \STATE $\mathbf{x}=\mathbb{Q}_{n}\mathbf{y}$
  \end{algorithmic}
  \end{block}
  \item Saad et al.\footnote{\relsize{-3}Youcef Saad and Martin H. Schultz. GMRES: A generalized minimal residual algorithm for solving nonsymmetric linear systems. Society for Industrial and Applied Mathematics, 7:856-859, 1986.} defines a novel method to compute $\widetilde{\mathbb{H}}_{n}$ from $\widetilde{\mathbb{H}}_{n-1}$ from Givens rotations
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Inexact Newton's Method}
\relsize{-1}
\begin{customlist}{2ex}{0pt}
  \item Newton-Krylov is an inexact Newton method since the linear step is not determined \emph{exactly}
  \item In Newton-Krylov framework, two tolerances were defined:
  \begin{enumerate}
    \item Nonlinear tolerance for Newton iteration
    \item Linear tolerance for GMRES iteration
  \end{enumerate}
  \item Why have tight linear convergence when nonlinear residual is large?
  \item Instead, a relative residual tolerance, $\eta$, is used
  \[
   \left\Vert \mathbb{J}\left(\mathbf{x}^{n}\right)\mathbf{dx}_{m}^{n}+\mathbf{F}\left(\mathbf{x}^{n}\right)\right\Vert <\eta\left\Vert \mathbf{F}\left(\mathbf{x}^{n}\right)\right\Vert
  \]
  \item At initial Newton iterations, GMRES will not be converged very tightly
  \item For the last couple of Newton iterations, convergence may be too tight - Limit how small linear tolerance is
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Jacobian-Free Approximation}
\relsize{-2}
\begin{customlist}{2ex}{0pt}
  \item Recall a Krylov subspace: $\mathcal{K}_{n}\left(\mathbb{A},\mathbf{v}\right)=\mathrm{span}\left\{ \mathbf{v},\mathbb{A}\mathbf{v},\mathbb{A}^{2}\mathbf{v},...,\mathbb{A}^{n-1}\mathbf{v}\right\}$
  \item The matrix $\mathbb{A}$ is always multiplying a vector, so why create $\mathbb{A}$ when it is only used to multiply a vector?
  \item Option 1: Preform Jacobian-vector anaytically
  \[
   \mathbb{J}\mathbf{y}=\left[\begin{array}{cc}
    \mathbb{M}-\lambda\mathbb{F} & -\mathbb{F}\bar{\mathbf{\Phi}}\\
    -\bar{\mathbf{\Phi}}^{\top} & 0
    \end{array}\right]\left[\begin{array}{c}
    y_{\phi}\\
    y_{\lambda}
    \end{array}\right]=\left[\begin{array}{c}
    \left(\mathbb{M}-\lambda\mathbb{F}\right)y_{\phi}-\mathbb{F}\bar{\mathbf{\Phi}}y_{\lambda}\\
    -\bar{\mathbf{\Phi}}^{\top}y_{\phi}
    \end{array}\right].
  \]
  \item Analytic method can get very complex, but can be done!
  \item Option 2: Approximate Jacobian-vector product with finite difference
  \[
   \mathbb{J}\mathbf{y}\approx\frac{\mathbf{F}\left(\mathbf{x}+\epsilon\mathbf{y}\right)-\mathbf{F}\left(\mathbf{x}\right)}{\epsilon}
  \]
  \item Advantages: 2 Function calls, saves memory and possibly computational time to form Jacobian
  \item $\epsilon$ is the perturbation parameter and is somewhat arbitrary - Mousseau\footnote{\relsize{-2}V.A. Mousseau. Implicitly balanced solution of the two-phase flow equations couple to nonlinear heat
    conduction. Journal of Computational Physics, 200:104-132, 2004.} recommends:
  \[
   \epsilon=\frac{\sum_{i=1}^{N}bx_{i}}{N\left\Vert \mathbf{y}\right\Vert _{2}}
  \]
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\begin{frame}{Preconditioning}
\begin{customlist}{2ex}{0pt}
  \item Want to limit number of GMRES iterations - computational time and memory
  \item An approx. preconditioner is formed from the Jacobian
  \item Before a calculation, a Jacobian matrix is formed analytically and a zero-fill Incomplete LU (ILU) is performed:
  \[
   \mathbb{R}=\mathbb{L}\mathbb{U}-\mathbb{A}
  \]
  \item In ILU, residual matrix $\mathbb{R}$ is constrained to certain conditions
  \item Zero-fill implies that the number and location of nonzeros is preserved
  \item Left preconditioning is used in this project:
  \[
   \mathbb{U}^{-1}\mathbb{L}^{-1}\mathbb{A}\mathbf{x}=\mathbb{U}^{-1}\mathbb{L}^{-1}\mathbf{b}
  \]
\end{customlist}
\end{frame}
%------------------------------------------------------------------------------
\end{section}
%==============================================================================
\begin{section}{Results}
\begin{frame}{Steady State}
\end{frame}
\end{section}
%==============================================================================
\begin{section}{Conclusions}
\begin{frame}{Conclusions}
\end{frame}
\end{section}
%==============================================================================
\end{document}
